package lesson2;

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
//        System.out.print("Введите число!: ");
//        int num = input.nextInt();
//        System.out.println("Hello World");
//        System.out.printf("Вы ввели число :%d", num); // время на видео 1.21

//        System.out.print("Имя: ");
//        String name = input.nextLine();// Если больше одного слова, то есть через пробел, то обязательно nextLine!
//        System.out.print("Возраст: ");
//        int age = input.nextInt();
//        System.out.print("Рост: ");
//        float height = input.nextFloat(); // Дробная часть отделяется запятой! Если ввести с точкой, будет ошибка.
//        System.out.printf("Имя: %s. Возраст: %d. Рост: %.2f", name, age, height); // обязательно в нужном порядке указать переменные.
//

//        System.out.println("Введите четыре числа: ");
//        System.out.print("1: "); // почему не переносится строка без println?
//        int a = input.nextInt();
//        System.out.print("2: "); // сперва предлагаем ввести, потом пишем что вводим
//        int b = input.nextInt();
//        System.out.print("3: ");
//        int c = input.nextInt();
//        System.out.print("4: ");
//        int d = input.nextInt();
////        int num = a + b; // можно было без дополнительных переменных, просто прописать действие в переменной count
////        int numN = c + d;
////        double count = (double) num / numN;
//        double count = (double) (a + b) / (c + d);
//        System.out.printf("Результат: %.2f", count);
//        input.close();

//        int a = 5;
//        a += 10; // без пробела (+=) a = a + 10 = 15
//        System.out.println(a);
//        a -= 7; // a = a - 7 = 15-7=8? у нас в (а) новое число из прошлого примера.
//        System.out.println(a);
//        // a++ => a = a + 1

//        int a, b, c, sum;
//        System.out.print("Введите 1е число: ");
//        a = input.nextInt();
//        System.out.print("Введите 2е число: ");
//        b = input.nextInt();
//        System.out.print("Введите 3е число: ");
//        c = input.nextInt();
//        sum = a + b + c;
//        System.out.println("Сумма чисел: " + sum);

//        int sum;
//        System.out.print("Введите 1е число: ");
//        sum = input.nextInt();
//        System.out.print("Введите 2е число: ");
//        sum += input.nextInt(); // с помощью += мы перезаписываем переменную sum и увеличиваем ее на новое вводимое число
//        System.out.print("Введите 3е число: ");
//        sum += input.nextInt(); //обошлись одной перееменной благодаря оператору +=
//        System.out.println("Сумма чисел: " + sum);

//        int a = 8;
//        int b = 3;
//
//        System.out.println(a ==b); // операторы сравнения возвращают либо true либо false - это булевы операторы
//        System.out.println(a != b);
//        System.out.println(a > b);
//        System.out.println(a < b);
//        System.out.println(a<= b);
//        System.out.println(a >=b);

        // boolean a1 = 5 < 6; // сделали одно сравнение
//        boolean a1 = 5 < 6 && 4 < 6; // логическое И. true && true => true только если оба выражения верны
//        boolean a2 = 5 > 6 && 4 < 6; // false && true => false  так как одно из выражений не верно. Это ложь с
//        // левой стороны и по этому дальше проверка не пойдет, так как уже получена ложь
//        boolean a3 = 5 < 6 && 4 > 6; // true && false => false
//        boolean a4 = 5 > 6 && 4 > 6; // false && false => false
//        System.out.println(a1);
//        System.out.println(a2);
//        System.out.println(a3);
//        System.out.println(a4);

        // Логическое ИЛИ ||
//        boolean a1 = 5 < 6 || 4 < 6; // логическое Или. true || true => true только если оба выражения верны
//        boolean a2 = 5 > 6 || 4 < 6; // false || true => true  так как одно из выражений верно.
//        boolean a3 = 5 < 6 || 4 > 6; // true || false => true
//        boolean a4 = 5 > 6 || 4 > 6; // false || false => false (4*2 > 6 первым отработает умножение, далее +-,
//        // потом сравнение)
//        System.out.println(a1);
//        System.out.println(a2);
//        System.out.println(a3);
//        System.out.println(a4);
//        System.out.println(!true); // "false"
//        System.out.println(!false); // "true"
//        System.out.println(!(4 < 6)); // "false" конвертируем в противоположное значение
        // (правду в неправду и наоборот)

//        int age;
//        System.out.print("Введите свой возраст: ");
//        age = input.nextInt();
//        if (age >= 18) { // нужно дописать условие если меньше 18
//            System.out.println("Доступ на сайт разрешен!");
//            System.out.println("Добро пожаловать!");// это вторая строка блока if. Она будет выводиться только при
//            // Наличее фигурных скобок.
//        } else { // Этот оператор сам по себе существовать не может. Берет все, что не попало в "если"
//            System.out.println("Доступ запрещен!");
//            System.out.println("Нужно у мамы спросить!");// Если строка одна, то можно не ставить фигурные скобки,
//            // а если несколько строк, то нужно, чтобы оператор "else" видел все строки. Иначе все остальные сроки
//            // будут сами по себе.
//        }

//        int num1 = 15;
//        int num2 = 15;
//        if (num1 > num2){
//            System.out.println("Первое число больше второго");
//        }
//        //else {
//        if (num2 > num1){
//            System.out.println("Второе число больше первого");
//        }
//        //else { // else всегда относится к последнему if.
//        if (num1 == num2){
//            System.out.println("Числа равны");
//        }
// ctrl+alt+l - выравнивание срок
//        int num1 = 1;
//        int num2 = 15;
//        if (num1 > num2){
//            System.out.println("Первое число больше второго");
//        }
//        else if (num2 > num1){ //иначе если
//            System.out.println("Второе число больше первого");
//        }
//        else {
//            System.out.println("Числа равны"); // два ДЗ! ввод данных и выровненный вывод значений величин.
//        }

        /*int age = 28;
        if(age >= 18 && age <= 65){ // С оператором && (и) работает корректно, с оператором или (||) нет.
            // false && true. && между этими значениями будет истина, а в || ложь
            System.out.println("Вы можете работать");
        }
        else { //объединяющий диапазон
            System.out.println("Работать не обязательно");
        }*/
        // вариант с работающим (||)
            /*int age = 98;
            if(age <= 18 || age >= 65){ // исключили диапазон, когда работать можно
                System.out.println("Работать не обязательно"); // поменяли местами вывод, для работы логического условия
            }
            else{
                System.out.println("Вы можете работать");
        }*/
//Друой вариант с типом булиан

//        int age = 98;
//        boolean isYoung = age >= 18; //присвоили значение переменной true
//        boolean isOld = age <= 65; // false
//        if(isYoung && isOld){ // Вместо условия подставили переменную. ! - меняет условие
//            // (инвертирует значение), получается false && true
//            System.out.println("Работать не обязательно"); //поменяли местами sout и ответ меняется
//        } else {
//            System.out.println("Вы можете работать");
//        }

        //проверить треугольник, чтобы он был равносторонний, равнобедренный или разносторонний
        // через ввод пользователем
       /* int a;
        System.out.print("Введите первую сторону: ");
        a = input.nextInt();
        int b;
        System.out.print("Введите вторую сторону: ");
        b = input.nextInt();
        int c;
        System.out.print("Введите третью сторону: ");
        c = input.nextInt();
        if (a == b && b == c && c == a) {
            System.out.println("Треугольник равносторонний"); // почему-то условие правильно работает только в таком порядке
        } else if (a == b || a == c || b == c) {
            System.out.println("Треугольник равнобедренный");
        } else {
            System.out.println("Треугольник разносторонний");

        } */
        //ввести количество ворон на ветке с правильным падежом
        /*int n;
        System.out.println("Ввести количество ворон от 0 до 9: ");
        n = input.nextInt();//строгая типизация языка  - вводим только целое число. Если введем не число или
        // нецелое число, будет ошибка ввода.
        //делаем проверку количества ворон и падежей с вложенными условиями
        if (n >= 0 && n <= 9) { //задали диапазон
            System.out.print("На ветке "); // постоянно повторяющиеся слова. Вводим их при любом удовлетворяющем условии
            if (n == 1) { //вложенный if, в него мы попадаем только если попали в 1й if
                System.out.println(n + " одна ворона");
            } else if (n >= 2 && n <= 4) {
                System.out.println(n + " вороны");
            } else { // сюда попадет все остальное кроме первых 2х условий
            // } else if(n == 0 || (n >=5 && n <= 9)){ // вариант с else if для задания условия для вывода
                // корректного падежа. && (и) отработает первым (приоритет), в скобки можно не брать! Но если сделать
                // скобки по другому, ((n == 0 || (n >=5) && n <= 9) то сперва отработает || (или). Тогда будет например (true) && true
                System.out.println(n + " ворон");
            }
        } else {
            System.out.println("!Ошибка ввода данных!");
        }*/
// 29.11.2023 01.08 ДЗ про копейки. Нужно найти логическую зависимость, при каком условии меняется окончание.

        //другое решение, без использования вложенных элементов
//        int n;
//        System.out.println("Ввести количество ворон от 0 до 9: ");
//        n = input.nextInt();//строгая типизация языка  - вводим только целое число. Если введем не число или
//        // Нецелое число, будет ошибка ввода.
//        //Делаем проверку количества ворон и падежей с вложенными условиями
//
//        if (n == 1) { // Без вложенного (if) нам нужно добавлять в каждом принте "На ветке ". На наше усмотрение
//            System.out.println("На ветке " + n + " одна ворона");
//        } else if (n >= 2 && n <= 4) {
//            System.out.println("На ветке " + n + " вороны");
//        } else if(n == 0 || n >=5 && n <= 9){ // вариант с else if для задания условия для вывода
//            // корректного падежа. && (и) отработает первым (приоритет), в скобки можно не брать! Но если сделать
//            // скобки по другому, ((n == 0 || (n >=5) && n <= 9) то сперва отработает || (или). Тогда будет например (true) && true
//            System.out.println("На ветке " + n + " ворон");
//        } else {
//            System.out.println("!Ошибка ввода данных!");
//        }

        // Задача на рабочие дни заведения
       /* int day, time;
        System.out.print("Введите день недели цифрами!: ");
        day = input.nextInt();
        if(day >= 1 && day <= 5) {
            System.out.println("Рабочий день.");
            System.out.print("Введите время: "); //фразу можно сделать в одну строку
            time = input.nextInt();
            if (time >= 8 && time <= 17){ //вложенное условие (if) делает возможность корректно и коротко
             // решить подобную задачу
                System.out.print("Открыто, смотрим все!");
            }else { // вложенное (else)
                System.out.println("Закрыто. Откроется в 8:00. Вариантов нет.");
            }
        }
        else if(day == 6 || day == 7){ // Ставим дни недели - выходные! Используем (||) т.к., одновременно ==6 && ==7 мы не сможем задать и будет ложь
            System.out.println("Выходной днь");
        }
        else {
            System.out.println("!Такого дня недели не придумали!");
        }*/
// задача! ввести день недели цифрами и пользователю должно вывестись наименование дня недели
       /* int dayN; // Объявили переменную для ввода
        System.out.print("Введите номер дня недели!: ");
        dayN = input.nextInt(); // После ввода номера дня нужно создать условие для проверки на рабочий или выходной
        if(dayN >= 1 && dayN <= 5){
            System.out.print("Это рабочий день. "); // когда выяснили что это будни нужно указать пользователю
            // название дня недели через вложенное if

            if(dayN == 1) {
                System.out.println("Понедельник!");
            }
                        if (dayN == 2) {
                            System.out.println("Вторник");
                        }
                        if (dayN == 3) {
                            System.out.println("Среда");
                        }
                        if (dayN == 4) {
                            System.out.println("Четверг");
                        }
                        if(dayN == 5) {
                            System.out.println("Пятница");
                        }
        } else if (dayN == 6 || dayN == 7) {
            System.out.print("Выходной день. ");
            if (dayN == 6) {
                System.out.println("Суббота");
            }
                        if (dayN == 7) {
                            System.out.println("Воскресенье");
                        }
        }else {
            System.out.println("Я ХЗ что это! Вы изобрели новый день недели.");
        }*/
        // вариант без кучи скобок!
        /*int dayN;
        System.out.print("Введите номер дня недели!: ");
        dayN = input.nextInt();
        if(dayN >= 1 && dayN <= 5){
            System.out.print("Это рабочий день. "); // следующая строка будет добавляться к этой, если мы попали
            // в диапазон будней. Вложенное условие позволило добавить новое условие в основное и дополнить ответ
            if (dayN == 1) System.out.println("Понедельник!");
            if (dayN == 2) System.out.println("Вторник");
            if (dayN == 3) System.out.println("Среда");
            if (dayN == 4) System.out.println("Четверг");
            if(dayN == 5) System.out.println("Пятница");
        } else if (dayN == 6 || dayN == 7) {
            System.out.print("Выходной день ");
            if (dayN == 6) System.out.println("Суббота");
            if (dayN == 7) System.out.println("Воскресенье");
        }else { // else нужен на все остальное
            System.out.println("Я ХЗ что это! Вы изобрели новый день недели.");
        }*/

        //Тернанрый оператор (3 операнда (условие (?) блок1: блок2). Условие идет до (?) - это булево значение,
        // возвращает true/false. Если условие дает true, то отрабатывается блок 1. Если false, то будет отрабатываться блок 2, после (:)
        /*int number, res;
        number = -10;
        res = number >= 0 ? number : -number; // проверяем условие больше >=0, нет! false! Преобразуем к положительному значению при помощи блока 2
        System.out.println(res); // при вводе -10 сработал false и мы попали во блок 2, но тка как он с (-),
        // то мы получили без (-). Если мы введем 10, то будет true и отработает блок 1*/

/*        int age;
        System.out.print("Введите свой возраст!: ");
        age = input.nextInt();
        System.out.println(age >= 18 ? "Приятного просмотра" : "Спросите у родителей, вам рано смотреть этот фильм!");*/

//        int a = 10, b = 10;
//        System.out.println(a == b ? "a = b" : a > b ? "a > b" : "b > a"); //Вложенный тернарный оператор. Мы проверили
        // первое условие и пошли во второе. Для удобства можно указать вложенный блок в скобки (a > b ? "a > b" : "b > a")
        // Ограничение на количество вложенности нет. Мы не можем в этом операторе создавать новые переменные!
        // Этот же пример, но в случе равенства переменных мы перезапишем значение b
//        int a = 10, b = 10;
//        System.out.println(a == b ? b = 8 : a > b ? "a > b" : "b > a"); // выполнилось условие true и мы попали
//        // в действие блока 1, в котором было выражение (присвоение b числа 8)

        // странная ситуация
//        int n = true ? false ? 10 : 20 : 30;// принцип работы оператора
//        System.out.println(n); // 20 (false ? 10 : 20) - это блок истина. true нас переносит в блок (false ? 10 : 20),
        // а в нем уже работает вложенный тернарный оператор, false переносит нас в блок 2, в котором 20. то есть при
        // true сработает то что после первого (?), при folse  сработает то что после (:).
        // Пример другой
//        int n = false ? false ? 10 : 20 : 30;
//        System.out.println(n); // 30, первый false нас переносит в блок 2 после вложенного блока 1 (false ? 10 : 20),
        // в длоке 2 число 30

        // задача, сделать программу деления на 0
//        int a = 20, b = 2;
//        //System.out.println((float) a / b); // сделали явное преобразование типов, при этом не имеет значение какую переменную мы преобразуем.
//        System.out.println(b == 0 ? "На 0 делить нельзя" : (float) a / b);

        //оператор свич
        /*int n;
        System.out.print("\t Выбор цвета светофора\n1 - красный, 2 - желтый, 3 - зеленый: ");
        n = input.nextInt();

        switch (n){ // То, что попало в switch мы будем сравнивать со значением case
            case 1: // проверяем введенное значение на равенство 1
                System.out.println("Стоим");
                break;
            case 2:
                System.out.println("Приготовились");
                break;
//            default: // можно перенести в любое место, важно чтобы после был брейк!
//                System.out.println("Такого цвета у этой модели светофора нет");
//                break;
            case 3:
                System.out.println("Идем");
                break;
            default: // заменяем else, но он может находиться и в самом начале, но тогда нужно для него ставить брейк
                System.out.println("Такого цвета у этой модели светофора нет");
        }*/

        // ДЗ 29.11.23 сосчитать монеты от 1 до 99 с правильным окончанием (01.27)
        // Разбор ДЗ про копейки.
        /* 1, 21, 31,..., 91 - копейка; 2, 3, 4 - копейки (92, 93, 94); 5, 6, 7, 8, 9 - копеек;11, 12, 13, 14 - копеек,
         это исключения.
         Нам нужно найти именно последнюю цифру. Мы уменьшаем число, но выводить значение элемента нам нужно. Нам нужна
          еще одна переменная.*/
        /*int n, kop;
        System.out.print("Введите число от 1 до 99: ");
        n = input.nextInt();
        kop = n;// Вспомогательная переменная для уменьшения исходного значения.
        // Делаем исключения.
        if(n >= 11 && n <= 14){ // проверяем исключения, а у остальных значений будем далее поверять последнюю цифру
            System.out.println(n + " копеек"); // процесс нахождения последней цифры выносим отдельно
        }else {
            kop = kop % 10; // ищем 21, 31, 41,..., 91 копейка. Уменьшается переменная kop.
            if (kop == 1){
                System.out.println(n + " копейка");
            } else if (kop >= 2 && kop <= 4) { // ищем 2, 3 и 4 копейки
                System.out.println(n + " копейки");
            }else {
                System.out.println(n + " копеек"); // оставшиеся значения.
            }
        }*/

        // лекция от 04.12.2023 оператор switch
        // для цвета красный можно ввести 11, для желтый 22, для зеленый 33

       /* int n;
        System.out.print("\t Выбор цвета светофора\n1 (11) - красный, 2 (22) - желтый, 3 (33) - зеленый: ");
        n = input.nextInt();

        switch (n) {
            case 1:
            case 11:// можно в две строки
                System.out.println("Стоим");
                break;
            case 2:case 22: // можно в одну
                System.out.println("Приготовились");
                break;
//            default: // можно перенести в любое место, важно чтобы после был брейк!
//                System.out.println("Такого цвета у этой модели светофора нет");
//                break;
            case 3:
            case 33:
                System.out.println("Идем");
                break;
            default:
                System.out.println("Такого цвета у этой модели светофора нет");
        }
        System.out.println("Hello"); // показать что мы вышли из свич */

        //задача. пользователь должен ввести месяц число, а программа должна вывести имя месяца и количество дней,
        // а на февряль сделать дополнительную проверку.
        /*int month, year;
        int numDays = 0; //создаем дополнительную переменную. И обязательно присваиваем 0, чтобы инициализировать.
        System.out.print("Введите номер месяца: ");
        month = input.nextInt();

        switch (month){
            case 1: // можно в одну строку
            case 3:
            case 5:
            case 7:
            case 8:
            case 10:
            case 12:
                numDays = 31;
                break;
            case 4:case 6:case 9:case 11:numDays = 30;break;
            case 2:
                System.out.print("Введите год: ");
                year = input.nextInt();
                *//*if (year % 4 == 0) {
                    numDays = 29;break;
                }else {
                    numDays = 28;break;*//*
                if (year % 4 == 0) { // внутри свич мы можем делать любые вложенные элементы.
                    numDays = 29;
                }else {
                    numDays = 28;
                }
                break; // лучше break выносить за пределы. Он заканчивает логически case и будет относиться логически к case, а не к if.
            default:
                System.out.print("Такого месяца не существует");
        }
        System.out.println("Количество дней: " + numDays);*/
        //запрашиваем у пользователя номер месяца и выводим соответсвующее время года. И ошибку ввода данных.
//        int monthN;
//        System.out.print("Введите номер месяца: ");
//        monthN = input.nextInt();
//        switch (monthN){ // в новой версии явы это не оператор, а выражение!
//            case 1:
//            case 2:
//            case 12:
//                System.out.println("Это же ЗИМА!");
//                break;
//            case 3:
//            case 4:
//            case 5:
//                System.out.println("Это же уже ВЕСНА!");
//                break;
//            case 6:
//            case 7:
//            case 8:
//                System.out.println("Наконец-то попали в ЛЕТО!");
//                break;
//            case 9:
//            case 10:
//            case 11:
//                System.out.println("Ну а теперь ОСЕНЬ!");
//                break;
           /* case 1, 2, 12 -> System.out.println("Это же ЗИМА!");
            case 3, 4, 5 -> System.out.println("Это же уже ВЕСНА!");
            case 6, 7, 8 -> System.out.println("Наконец-то попали в ЛЕТО!");
            case 9, 10, 11 -> System.out.println("Ну а теперь ОСЕНЬ!");
            default ->
                System.out.println("!На этой планете такого месяца НЕТ!");
               //System.out.println("Ошибка ввода данных"); // при таком виде не работает(((
        }
        input.close();*/
// остановились 04.12. 0.57
        /*System.out.print("Введите номер месяца: ");
        monthN = input.nextInt();
        String s = switch (monthN){ // переменная тпа (стринг) создана и в нее присваивается значение. Строка теперь
            // заканчивается на (}) и нужно завершить ее (;). Сейчас мы делаем точное равенство.
            // С (if) было бы так month == 3 || month == 4 || month == 5.
            case 1, 2, 12 -> "Это же ЗИМА!"; // возвращает только один тип данных
            case 3, 4, 5 -> "Это же уже ВЕСНА!";
            case 6, 7, 8 -> "Наконец-то попали в ЛЕТО!";
            case 9, 10, 11 -> "Ну а теперь ОСЕНЬ!";
            default -> "!На этой планете такого месяца НЕТ!";
        }; // ставим ; чтобы все читалось и не подчеркивалось красным
        System.out.println(s);
        input.close();*/

        // задача. Перевод баллов из 12и значной в 10и знач. 5-10,11,12. 4-7, 8, 9. 3-4, 5, 6. 2-1, 2, 3.
        // Решаем через тернарный оператор.
        /*System.out.print("Введите балл по 12-и бальной системе оценивания: ");
        int num = input.nextInt();

        System.out.print("Ваш балл по 5и бальной системе оценивания: ");
        switch ((num >= 1 && num <= 3) ? 2 :
                (num >= 4 && num <= 6) ? 3 :
                        (num >= 7 && num <= 9) ? 4 :
                                (num >= 10 && num <= 12) ? 5 : 0){
            case 2 -> System.out.println(2);// значение в скобках соответствует значению после (?) в тернарном операторе
            case 3 -> System.out.println(3);
            case 4 -> System.out.println(4);
            case 5 -> System.out.println(5);
            case 0 -> System.out.println("такого значения нет"); // в данном случае без default, потому что 0 попадает в значение false
            // мы не сделали возврящаемое значение. Так как возвращаются разные типы данных.
            // Дома задачку (04.12; 1.43 на switch) Продолжить с 1.45.
        }*/


    }
}
